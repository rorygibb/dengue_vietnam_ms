water_piped_year,
flushtoilet_any_year,
water_g,
flushany_g
)
#
ddf$region3x = as.integer(as.factor(ddf$region3))
head(ddf)
# with a province level fixed effect to account for confounding effects of space
form_base = paste(
c("y ~ 1",
"offset(logpop)",
"f(month, model='rw1', hyper=hyper2.rw, cyclic=TRUE, scale.model=TRUE, constr=TRUE, replicate=provincex)",
"f(polyid, model='bym2', graph=nbmatrix_name, replicate=yearx, scale.model=TRUE, constr=TRUE, adjust.for.con.comp=TRUE, hyper=hyper.bym2)"),
collapse = " + "
)
# full model
effect_names =
c("tmean_coolestmonth_s",
"gravityf_log",
"urban_s",
"urbanexp10_log",
"traffic_kmperinhab_log",
"f(flushany_g, model='rw2', hyper=hyper2.rw, scale.model=TRUE, constr=TRUE)",
"f(water_g, model='rw2', hyper=hyper2.rw, scale.model=TRUE, constr=TRUE)",
"f(tmean_1m_g, model='rw2', hyper=hyper2.rw, scale.model=TRUE, constr=TRUE)",
"f(spei1_1m_g, model='rw2', hyper=hyper2.rw, scale.model=TRUE, constr=TRUE)",
"f(spei6_5m_g, model='rw2', hyper=hyper2.rw, scale.model=TRUE, constr=TRUE)")
m1 = paste(effect_names, collapse=" + "); name1 = "full"
fx = m1
# create data frame
fx = data.frame(modid = 1:length(fx),
fx = fx,
candidate = c(name1),
formula = paste(form_base, fx, sep=" + "))
bs = data.frame(modid = "baseline", fx = "baseline", candidate="baseline", formula=form_base)
fx = rbind(fx, bs)
# model name
fx$model_filename = paste("fullmod_nb_model_", fx$modid, ".R", sep="")
i = 1
# formula
fx_i = fx[ i, ]
form_i = formula(as.vector(fx_i$formula))
# fit INLA model nested in tryCatch: time out after 2 hours (7200 secs)
e = simpleError("error fitting")
# data
dd_i <- ddf %>% dplyr::mutate(y = cases)
# fit model
print("")
print("==========================================")
print(Sys.time())
print("==========================================")
print("")
# set config to TRUE for posterior samples
mod_i = tryCatch(
fitINLAModel(form_i, dd_i, family="nbinomial", verbose=TRUE, config=TRUE, return.marginals=FALSE),
error = function(e) return(e)
)
# project root and dependencies
PATH = dirname(dirname(rstudioapi::getSourceEditorContext()$path))
setwd(PATH)
pacman::p_load("dplyr", "raster", "rgdal", "sf", "ecmwfr", "stringr", "ggplot2", "lubridate", "magrittr", "vroom")
# vietnam extent
ext = extent(c(100, 110, 7.5, 24))
# theme for mapping
maptheme = theme_classic() +
theme(axis.text = element_blank(),
axis.title = element_blank(),
axis.line = element_blank(),
axis.ticks = element_blank(),
plot.title = element_text(hjust=0.5, size=12),
legend.title = element_text(size=10),
strip.background = element_blank())
# districts to be excluded (offshore)
# only ones with substantial dengue cases are in Kien Giang; could be worth exploring including them but thisis sufficient for now
offshore_areas = c(70154, 70339, 70273, 70355, 70698)
# districts shapefile for Vietnam
shp = st_read("./data/shapefiles/dengue_districts_shapefile.shp") %>%
dplyr::filter(!areaid %in% offshore_areas)
# provinces shapefile with regions info, and vietnam outline for mapping
shp_prov = st_read("./data/shapefiles/provinces.shp")
st_crs(shp_prov) = st_crs(shp)
shp_prov = st_crop(shp_prov, shp)
rr = read.csv("./data/shapefiles/regions_lookup.csv")
shp_prov = left_join(shp_prov, rr[ , c("provincena", "region")])
rr = read.csv("./data/shapefiles/regions_lookup.csv")
shp_prov = left_join(shp_prov, rr[ , c("provincena", "region")])
shp_vt = st_read("./data/shapefiles/gadm36_VNM_0.shp") %>%
st_crop(shp)
# dengue, regions, climate, landuse, connectivity data
dd = read.csv("./output/model_data/ModelData_Dengue_VietAll.csv") %>%
dplyr::left_join(read.csv("./output/model_data/ModelData_ClimaticRegions.csv")) %>%
dplyr::left_join(read.csv("./output/model_data/ModelData_SocioEcologicalCovar_VietAll.csv")) %>%
dplyr::left_join(vroom::vroom("./output/model_data/ModelData_ClimateLags_VietAll.csv.gz", col_types = list(areaid=col_character(), date=col_character()))) %>%
dplyr::mutate(date = as.Date(date))
# add polygon area, lat lon, region information
#shp$area_km2 = as.vector(st_area(shp) / 10^6)
shp = cbind(shp, as.data.frame(st_coordinates(st_centroid(shp))) %>% dplyr::rename("longitude"=1, "latitude"=2))
dd = left_join(dd, shp[ , c("areaid", "latitude", "longitude")] %>% st_drop_geometry())
shp = left_join(shp, dd[ !duplicated(dd$areaid), c("areaid", "region1", "region2", "region3") ])
# subset to provinces
shp = shp[ shp$areaid %in% dd$areaid, ]
# latitude order
xy = cbind(shp[ , c("areaid"), drop=F] %>% sf::st_drop_geometry(), st_coordinates(st_centroid(shp))) %>%
dplyr::arrange(Y)
heatmap = dd %>%
dplyr::filter(district != "Cam My") %>%
dplyr::mutate(date=as.Date(date),
areaid = factor(areaid, levels=xy$areaid, ordered=TRUE)
) %>%
ggplot() +
geom_tile(aes(x = date, y=areaid, fill=log(incidence+1)), width=31) +
scale_fill_gradientn(colors=viridisLite::turbo(200), na.value="grey60", name="Dengue\nincidence\n(log)") +
theme_minimal() +
theme(axis.text.y = element_blank(),
axis.text.x = element_text(size=13),
panel.grid = element_blank(),
legend.title = element_text(size=13),
legend.text = element_text(size=12.5),
strip.text = element_text(size=14),
axis.title = element_text(size=14),
axis.ticks.y = element_blank()) +
xlab("Month") + ylab("District (ordered from low to high latitude)") +
facet_wrap(~province, ncol=1, scales="free_y")
heatmap
heatmap = dd %>%
dplyr::filter(district != "Cam My") %>%
dplyr::mutate(date=as.Date(date),
areaid = factor(areaid, levels=xy$areaid, ordered=TRUE),
province = factor(province, levels=c("Ha Noi", "Dak Lak", "Khanh Hoa", "Dong Nai"), ordered=TRUE)
) %>%
ggplot() +
geom_tile(aes(x = date, y=areaid, fill=log(incidence+1)), width=31) +
scale_fill_gradientn(colors=viridisLite::turbo(200), na.value="grey60", name="Dengue\nincidence\n(log)") +
theme_minimal() +
theme(axis.text.y = element_text(size=9),
axis.text.x = element_text(size=13),
panel.grid = element_blank(),
legend.title = element_text(size=13),
legend.text = element_text(size=12.5),
strip.text = element_text(size=14),
axis.title = element_text(size=14),
axis.ticks.y = element_blank()) +
xlab("Month") + ylab("District") +
facet_wrap(~province, ncol=1, scales="free_y")
heatmap
head(dd)
heatmap = dd %>%
dplyr::filter(district != "Cam My") %>%
dplyr::mutate(date=as.Date(date),
areaid = factor(areaid, levels=xy$areaid, ordered=TRUE),
province = factor(province, levels=c("Ha Noi", "Dak Lak", "Khanh Hoa", "Dong Nai"), ordered=TRUE)
) %>%
ggplot() +
geom_tile(aes(x = date, y=district, fill=log(incidence+1)), width=31) +
scale_fill_gradientn(colors=viridisLite::turbo(200), na.value="grey60", name="Dengue\nincidence\n(log)") +
theme_minimal() +
theme(axis.text.y = element_text(size=9),
axis.text.x = element_text(size=13),
panel.grid = element_blank(),
legend.title = element_text(size=13),
legend.text = element_text(size=12.5),
strip.text = element_text(size=14),
axis.title = element_text(size=14),
axis.ticks.y = element_blank()) +
xlab("Month") + ylab("District") +
facet_wrap(~province, ncol=1, scales="free_y")
heatmap
heatmap = dd %>%
dplyr::filter(district != "Cam My") %>%
dplyr::mutate(date=as.Date(date),
areaid = factor(areaid, levels=xy$areaid, ordered=TRUE),
province = factor(province, levels=c("Ha Noi", "Dak Lak", "Khanh Hoa", "Dong Nai"), ordered=TRUE)
) %>%
ggplot() +
geom_tile(aes(x = date, y=district, fill=log(incidence+1)), width=31) +
scale_fill_gradientn(colors=viridisLite::turbo(200), na.value="grey60", name="Dengue\nincidence\n(log)") +
theme_minimal() +
theme(axis.text.y = element_text(size=6),
axis.text.x = element_text(size=13),
panel.grid = element_blank(),
legend.title = element_text(size=13),
legend.text = element_text(size=12.5),
strip.text = element_text(size=14),
axis.title = element_text(size=14),
axis.ticks.y = element_blank()) +
xlab("Month") + ylab("District") +
facet_wrap(~province, ncol=1, scales="free_y")
heatmap
heatmap = dd %>%
#dplyr::filter(district != "Cam My") %>%
dplyr::mutate(date=as.Date(date),
areaid = factor(areaid, levels=xy$areaid, ordered=TRUE),
province = factor(province, levels=c("Ha Noi", "Dak Lak", "Khanh Hoa", "Dong Nai"), ordered=TRUE)
) %>%
ggplot() +
geom_tile(aes(x = date, y=district, fill=log(incidence+1)), width=31) +
scale_fill_gradientn(colors=viridisLite::turbo(200), na.value="grey60", name="Dengue\nincidence\n(log)") +
theme_minimal() +
theme(axis.text.y = element_text(size=6),
axis.text.x = element_text(size=13),
panel.grid = element_blank(),
legend.title = element_text(size=13),
legend.text = element_text(size=12.5),
strip.text = element_text(size=14),
axis.title = element_text(size=14),
axis.ticks.y = element_blank()) +
xlab("Month") + ylab("District") +
facet_wrap(~province, ncol=1, scales="free_y")
heatmap
heatmap = dd %>%
dplyr::mutate(date=as.Date(date),
areaid = factor(areaid, levels=xy$areaid, ordered=TRUE),
province = factor(province, levels=c("Ha Noi", "Dak Lak", "Khanh Hoa", "Dong Nai"), ordered=TRUE)
) %>%
ggplot() +
geom_tile(aes(x = date, y=district, fill=log(incidence+1)), width=31) +
scale_fill_gradientn(colors=viridisLite::turbo(200), na.value="grey60", name="Dengue\nincidence\n(log)") +
theme_minimal() +
theme(axis.text.y = element_text(size=6),
axis.text.x = element_text(size=13),
panel.grid = element_blank(),
legend.title = element_text(size=13),
legend.text = element_text(size=12.5),
strip.text = element_text(size=14),
axis.title = element_text(size=14),
axis.ticks.y = element_blank()) +
xlab("Month") + ylab("District") +
facet_wrap(~province, ncol=1, scales="free_y")
ggsave(heatmap, file="./output/figures_example/DengueHeatmap.jpg", device="jpg", units="in", width=9, height=13, dpi=600, scale=0.90)
ggsave(heatmap, file="./output/figures_example/DengueHeatmap.jpg", device="jpg", units="in", width=5, height=8, dpi=600, scale=0.90)
ggsave(heatmap, file="./output/figures_example/DengueHeatmap.jpg", device="jpg", units="in", width=7, height=8, dpi=600, scale=0.90)
# calculate yearly incidence
dd1 = dd %>%
dplyr::filter(!is.na(cases)) %>%
dplyr::group_by(year, areaid) %>%
dplyr::summarise(cases = sum(cases, na.rm=TRUE),
pop = head(population_census, 1))
dd1$incidence = ( dd1$cases / dd1$pop ) * 100000
head(dd1)
# calculate average over study period
dd1 %>% dplyr::group_by(areaid) %>% dplyr::summarise(incidence = mean(incidence, na.rm=TRUE))
# calculate average over study period
dd1 = dd1 %>% dplyr::group_by(areaid) %>% dplyr::summarise(incidence = mean(incidence, na.rm=TRUE))
shpx = shp %>% left_join(dd1)
head(shpx)
ggplot() +
geom_sf(data=shpx, aes(fill=log(incidence+1)), col=NA) +
geom_sf(data=shp_prov[ shp_prov$provincena %in% dd$province, ], fill=NA, col="grey70", alpha=0.2, size=0.2) +
scale_fill_gradientn(colors = viridisLite::mako(200), name="Mean\nannual\nincidence\n(log)") +
maptheme +
facet_wrap(~areaprovin, nrow=1, scales="free") +
theme(legend.title = element_text(size=14),
legend.text = element_text(size=14),
strip.text = element_text(size=16),
legend.position="right")
pp = "Ha Noi"
ggplot() +
geom_sf(data=shpx[ shpx$areaprovin == pp, ], aes(fill=log(incidence+1)), col=NA) +
geom_sf(data=shp_prov[ shp_prov$provincena %in% pp, ], fill=NA, col="grey70", alpha=0.2, size=0.2) +
scale_fill_gradientn(colors = viridisLite::mako(200), name="Mean\nannual\nincidence\n(log)") +
maptheme +
facet_wrap(~areaprovin, nrow=1) +
theme(legend.title = element_text(size=14),
legend.text = element_text(size=14),
strip.text = element_text(size=16),
legend.position="right")
ggplot() +
geom_sf(data=shpx[ shpx$areaprovin == pp, ], aes(fill=log(incidence+1)), col=NA) +
geom_sf(data=shp_prov[ shp_prov$provincena %in% pp, ], fill=NA, col="grey70", alpha=0.2, size=0.2) +
scale_fill_gradientn(colors = viridisLite::mako(200), name="Mean\nannual\nincidence\n(log)") +
maptheme +
facet_wrap(~areaprovin, nrow=1) +
theme(legend.title = element_text(size=10),
legend.text = element_text(size=10),
strip.text = element_text(size=13),
legend.position="right")
pp = "Ha Noi"
p1 = ggplot() +
geom_sf(data=shpx[ shpx$areaprovin == pp, ], aes(fill=log(incidence+1)), col=NA) +
geom_sf(data=shp_prov[ shp_prov$provincena %in% pp, ], fill=NA, col="grey70", alpha=0.2, size=0.2) +
scale_fill_gradientn(colors = viridisLite::mako(200), name="Mean\nannual\nincidence\n(log)") +
maptheme +
facet_wrap(~areaprovin, nrow=1) +
theme(legend.title = element_text(size=10),
legend.text = element_text(size=10),
strip.text = element_text(size=13),
legend.position="right")
p1 = ggplot() +
geom_sf(data=shpx[ shpx$areaprovin == pp, ], aes(fill=log(incidence+1)), col=NA) +
geom_sf(data=shp_prov[ shp_prov$provincena %in% pp, ], fill=NA, col="grey30", alpha=0.8, size=0.4) +
scale_fill_gradientn(colors = viridisLite::mako(200), name="Mean\nannual\nincidence\n(log)") +
maptheme +
facet_wrap(~areaprovin, nrow=1) +
theme(legend.title = element_text(size=10),
legend.text = element_text(size=10),
strip.text = element_text(size=13),
legend.position="right")
p1
pp = "Dak Lak"
p2 = ggplot() +
geom_sf(data=shpx[ shpx$areaprovin == pp, ], aes(fill=log(incidence+1)), col=NA) +
geom_sf(data=shp_prov[ shp_prov$provincena %in% pp, ], fill=NA, col="grey30", alpha=0.8, size=0.4) +
scale_fill_gradientn(colors = viridisLite::mako(200), name="Mean\nannual\nincidence\n(log)") +
maptheme +
facet_wrap(~areaprovin, nrow=1) +
theme(legend.title = element_text(size=10),
legend.text = element_text(size=10),
strip.text = element_text(size=13),
legend.position="right")
# individual provinces
pp = "Ha Noi"
p1 = ggplot() +
geom_sf(data=shpx[ shpx$areaprovin == pp, ], aes(fill=log(incidence+1)), col=NA) +
geom_sf(data=shp_prov[ shp_prov$provincena %in% pp, ], fill=NA, col="grey30", alpha=0.8, size=0.4) +
scale_fill_gradientn(colors = viridisLite::mako(200), name="Mean\nannual\nincidence\n(log)") +
maptheme +
facet_wrap(~areaprovin, nrow=1) +
theme(legend.title = element_text(size=10),
legend.text = element_text(size=10),
strip.text = element_text(size=13),
legend.position="right")
pp = "Dak Lak"
p2 = ggplot() +
geom_sf(data=shpx[ shpx$areaprovin == pp, ], aes(fill=log(incidence+1)), col=NA) +
geom_sf(data=shp_prov[ shp_prov$provincena %in% pp, ], fill=NA, col="grey30", alpha=0.8, size=0.4) +
scale_fill_gradientn(colors = viridisLite::mako(200), name="Mean\nannual\nincidence\n(log)") +
maptheme +
facet_wrap(~areaprovin, nrow=1) +
theme(legend.title = element_text(size=10),
legend.text = element_text(size=10),
strip.text = element_text(size=13),
legend.position="right")
pp = "Khanh Hoa"
p3 = ggplot() +
geom_sf(data=shpx[ shpx$areaprovin == pp, ], aes(fill=log(incidence+1)), col=NA) +
geom_sf(data=shp_prov[ shp_prov$provincena %in% pp, ], fill=NA, col="grey30", alpha=0.8, size=0.4) +
scale_fill_gradientn(colors = viridisLite::mako(200), name="Mean\nannual\nincidence\n(log)") +
maptheme +
facet_wrap(~areaprovin, nrow=1) +
theme(legend.title = element_text(size=10),
legend.text = element_text(size=10),
strip.text = element_text(size=13),
legend.position="right")
pp = "Dong Nai"
p4 = ggplot() +
geom_sf(data=shpx[ shpx$areaprovin == pp, ], aes(fill=log(incidence+1)), col=NA) +
geom_sf(data=shp_prov[ shp_prov$provincena %in% pp, ], fill=NA, col="grey30", alpha=0.8, size=0.4) +
scale_fill_gradientn(colors = viridisLite::mako(200), name="Mean\nannual\nincidence\n(log)") +
maptheme +
facet_wrap(~areaprovin, nrow=1) +
theme(legend.title = element_text(size=10),
legend.text = element_text(size=10),
strip.text = element_text(size=13),
legend.position="right")
gridExtra::grid.arrange(p1, p2, p3, p4, ncol=2, nrow=2)
# calculate yearly incidence
dd1 = dd[ -which(dd$district == "Cam My" & dd$year == 2019), ]
dd1 = dd1 %>%
dplyr::filter(!is.na(cases)) %>%
dplyr::group_by(year, areaid) %>%
dplyr::summarise(cases = sum(cases, na.rm=TRUE),
pop = head(population_census, 1))
dd1$incidence = ( dd1$cases / dd1$pop ) * 100000
# calculate average over study period
dd1 = dd1 %>% dplyr::group_by(areaid) %>% dplyr::summarise(incidence = mean(incidence, na.rm=TRUE))
shpx = shp %>% left_join(dd1)
# individual provinces
pp = "Ha Noi"
p1 = ggplot() +
geom_sf(data=shpx[ shpx$areaprovin == pp, ], aes(fill=log(incidence+1)), col=NA) +
geom_sf(data=shp_prov[ shp_prov$provincena %in% pp, ], fill=NA, col="grey30", alpha=0.8, size=0.4) +
scale_fill_gradientn(colors = viridisLite::mako(200), name="Mean\nannual\nincidence\n(log)") +
maptheme +
facet_wrap(~areaprovin, nrow=1) +
theme(legend.title = element_text(size=10),
legend.text = element_text(size=10),
strip.text = element_text(size=13),
legend.position="right")
pp = "Dak Lak"
p2 = ggplot() +
geom_sf(data=shpx[ shpx$areaprovin == pp, ], aes(fill=log(incidence+1)), col=NA) +
geom_sf(data=shp_prov[ shp_prov$provincena %in% pp, ], fill=NA, col="grey30", alpha=0.8, size=0.4) +
scale_fill_gradientn(colors = viridisLite::mako(200), name="Mean\nannual\nincidence\n(log)") +
maptheme +
facet_wrap(~areaprovin, nrow=1) +
theme(legend.title = element_text(size=10),
legend.text = element_text(size=10),
strip.text = element_text(size=13),
legend.position="right")
pp = "Khanh Hoa"
p3 = ggplot() +
geom_sf(data=shpx[ shpx$areaprovin == pp, ], aes(fill=log(incidence+1)), col=NA) +
geom_sf(data=shp_prov[ shp_prov$provincena %in% pp, ], fill=NA, col="grey30", alpha=0.8, size=0.4) +
scale_fill_gradientn(colors = viridisLite::mako(200), name="Mean\nannual\nincidence\n(log)") +
maptheme +
facet_wrap(~areaprovin, nrow=1) +
theme(legend.title = element_text(size=10),
legend.text = element_text(size=10),
strip.text = element_text(size=13),
legend.position="right")
pp = "Dong Nai"
p4 = ggplot() +
geom_sf(data=shpx[ shpx$areaprovin == pp, ], aes(fill=log(incidence+1)), col=NA) +
geom_sf(data=shp_prov[ shp_prov$provincena %in% pp, ], fill=NA, col="grey30", alpha=0.8, size=0.4) +
scale_fill_gradientn(colors = viridisLite::mako(200), name="Mean\nannual\nincidence\n(log)") +
maptheme +
facet_wrap(~areaprovin, nrow=1) +
theme(legend.title = element_text(size=10),
legend.text = element_text(size=10),
strip.text = element_text(size=13),
legend.position="right")
gridExtra::grid.arrange(p1, p2, p3, p4, ncol=2, nrow=2)
pc = gridExtra::grid.arrange(p1, p2, p3, p4, ncol=2, nrow=2)
pc2 = gridExtra::grid.arrange(pc, heatmap, ncol=2, widths=c(1.5, 1))
pc2 = gridExtra::grid.arrange(pc, heatmap, ncol=2, widths=c(1, 1))
pc = gridExtra::grid.arrange(p1, p2, p3, p4, ncol=2, nrow=2)
ggsave(pc, file="./output/figures_example/ProvincesMap.jpg", device="jpg", units="in", width=8, height=8, dpi=600, scale=0.90)
# individual provinces
pp = "Ha Noi"
p1 = ggplot() +
geom_sf(data=shpx[ shpx$areaprovin == pp, ], aes(fill=log(incidence+1)), col=NA) +
#geom_sf(data=shp_prov[ shp_prov$provincena %in% pp, ], fill=NA, col="grey30", alpha=0.8, size=0.4) +
scale_fill_gradientn(colors = viridisLite::mako(200), name="Mean\nannual\nincidence\n(log)") +
maptheme +
facet_wrap(~areaprovin, nrow=1) +
theme(legend.title = element_text(size=10),
legend.text = element_text(size=10),
strip.text = element_text(size=13),
legend.position="right")
pp = "Dak Lak"
p2 = ggplot() +
geom_sf(data=shpx[ shpx$areaprovin == pp, ], aes(fill=log(incidence+1)), col=NA) +
#geom_sf(data=shp_prov[ shp_prov$provincena %in% pp, ], fill=NA, col="grey30", alpha=0.8, size=0.4) +
scale_fill_gradientn(colors = viridisLite::mako(200), name="Mean\nannual\nincidence\n(log)") +
maptheme +
facet_wrap(~areaprovin, nrow=1) +
theme(legend.title = element_text(size=10),
legend.text = element_text(size=10),
strip.text = element_text(size=13),
legend.position="right")
pp = "Khanh Hoa"
p3 = ggplot() +
geom_sf(data=shpx[ shpx$areaprovin == pp, ], aes(fill=log(incidence+1)), col=NA) +
#geom_sf(data=shp_prov[ shp_prov$provincena %in% pp, ], fill=NA, col="grey30", alpha=0.8, size=0.4) +
scale_fill_gradientn(colors = viridisLite::mako(200), name="Mean\nannual\nincidence\n(log)") +
maptheme +
facet_wrap(~areaprovin, nrow=1) +
theme(legend.title = element_text(size=10),
legend.text = element_text(size=10),
strip.text = element_text(size=13),
legend.position="right")
pp = "Dong Nai"
p4 = ggplot() +
geom_sf(data=shpx[ shpx$areaprovin == pp, ], aes(fill=log(incidence+1)), col=NA) +
#geom_sf(data=shp_prov[ shp_prov$provincena %in% pp, ], fill=NA, col="grey30", alpha=0.8, size=0.4) +
scale_fill_gradientn(colors = viridisLite::mako(200), name="Mean\nannual\nincidence\n(log)") +
maptheme +
facet_wrap(~areaprovin, nrow=1) +
theme(legend.title = element_text(size=10),
legend.text = element_text(size=10),
strip.text = element_text(size=13),
legend.position="right")
pc = gridExtra::grid.arrange(p1, p2, p3, p4, ncol=2, nrow=2)
ggsave(pc, file="./output/figures_example/ProvincesMap.jpg", device="jpg", units="in", width=8, height=8, dpi=600, scale=0.90)
# individual provinces
pp = "Ha Noi"
p1 = ggplot() +
geom_sf(data=shpx[ shpx$areaprovin == pp, ], aes(fill=log(incidence+1)), col=NA) +
#geom_sf(data=shp_prov[ shp_prov$provincena %in% pp, ], fill=NA, col="grey30", alpha=0.8, size=0.4) +
scale_fill_gradientn(colors = rev(viridisLite::mako(200)), name="Mean\nannual\nincidence\n(log)") +
maptheme +
facet_wrap(~areaprovin, nrow=1) +
theme(legend.title = element_text(size=10),
legend.text = element_text(size=10),
strip.text = element_text(size=13),
legend.position="right")
pp = "Dak Lak"
p2 = ggplot() +
geom_sf(data=shpx[ shpx$areaprovin == pp, ], aes(fill=log(incidence+1)), col=NA) +
#geom_sf(data=shp_prov[ shp_prov$provincena %in% pp, ], fill=NA, col="grey30", alpha=0.8, size=0.4) +
scale_fill_gradientn(colors = rev(viridisLite::mako(200)), name="Mean\nannual\nincidence\n(log)") +
maptheme +
facet_wrap(~areaprovin, nrow=1) +
theme(legend.title = element_text(size=10),
legend.text = element_text(size=10),
strip.text = element_text(size=13),
legend.position="right")
pp = "Khanh Hoa"
p3 = ggplot() +
geom_sf(data=shpx[ shpx$areaprovin == pp, ], aes(fill=log(incidence+1)), col=NA) +
#geom_sf(data=shp_prov[ shp_prov$provincena %in% pp, ], fill=NA, col="grey30", alpha=0.8, size=0.4) +
scale_fill_gradientn(colors = rev(viridisLite::mako(200)), name="Mean\nannual\nincidence\n(log)") +
maptheme +
facet_wrap(~areaprovin, nrow=1) +
theme(legend.title = element_text(size=10),
legend.text = element_text(size=10),
strip.text = element_text(size=13),
legend.position="right")
pp = "Dong Nai"
p4 = ggplot() +
geom_sf(data=shpx[ shpx$areaprovin == pp, ], aes(fill=log(incidence+1)), col=NA) +
#geom_sf(data=shp_prov[ shp_prov$provincena %in% pp, ], fill=NA, col="grey30", alpha=0.8, size=0.4) +
scale_fill_gradientn(colors = rev(viridisLite::mako(200)), name="Mean\nannual\nincidence\n(log)") +
maptheme +
facet_wrap(~areaprovin, nrow=1) +
theme(legend.title = element_text(size=10),
legend.text = element_text(size=10),
strip.text = element_text(size=13),
legend.position="right")
pc = gridExtra::grid.arrange(p1, p2, p3, p4, ncol=2, nrow=2)
ggsave(pc, file="./output/figures_example/ProvincesMap.jpg", device="jpg", units="in", width=8, height=8, dpi=600, scale=0.90)
